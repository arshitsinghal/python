Problem 1:
Given the participants' score sheet for your University Sports Day, you are required to find the runner-up score. You are given N scores. Store them in a list and find the score of the runner-up.

Sample Input 0

5
2 3 6 6 5
Sample Output 0
5


===========>

n = int(input('enter number of scores : '))
arr = map(int, input('enter scores: ').split())
arr = list(set(list(arr)))
ar = len(arr)
arr = sorted(arr)
print(arr[ar-2])

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Problem 2:
Problem Description
Rotate a given String in the specified direction by specified magnitude.
After each rotation make a note of the first character of the rotated String, After all rotation are performed the accumulated first character as noted previously will form another string, say FIRSTCHARSTRING.
Check If FIRSTCHARSTRING is an Anagram of any substring of the Original string.
If yes print "YES" otherwise "NO". Input
The first line contains the original string s. The second line contains a single integer q. The ith of the next q lines contains character d[i] denoting direction and integer r[i] denoting the magnitude.

Constraints
1 <= Length of original string <= 30
1<= q <= 10

Output
YES or NO

Example 1
Input
carrace
 3
 L 2
 R 2
 L 3


Output
NO


========>
word = input("Enter the String:")
original_word = word
rotation = input("Enter the number of rotation:")
rotation = int(rotation)

def split(word):
    return [char for char in word]

def concatenate_list_data(list):
    result= ''
    for element in list:
        result += str(element)
    return result

def anagram_string_maker(string1, s):
    a = split(string1)
    b = []
    for i in range(0, s):
        char_mov_direction = input('Enter the direction L or R :')
        char_number_of_movements = input('Enter the number of movements: ')
        char_number_of_movements = int(char_number_of_movements)

        if(char_mov_direction == 'L'):
            b.append(a[char_number_of_movements])
        elif(char_mov_direction == 'R'):
            b.append(a[-(char_number_of_movements)])
    result = concatenate_list_data(b)
    return result

def is_anagram(str1, str2):
    list_str1 = list(str1)
    list_str1.sort()
    list_str2 = list(str2)
    list_str2.sort()


    if(list_str1 == list_str2):
        print("Yes")
    else:
        print("No")

word = anagram_string_maker(word, rotation)
is_anagram(original_word, word)



-------------------------------------------------------------------------------------------------------------
Problem 3:
Stubborn Vowels
In english alphabets there are two types of words, vowels and consonents.You are writing a program to reverse a given string, but the vowels are stubborn to move away from their position. So given a string where the vowels are stubborn,
print what will be word if the entire word is reversed except for the vowels.

Input Format
One string input

Constraints
3<=String length<=10^5

Output Format
Reversed string output

Sample Input 0
missing

Sample Output 0
ngissim

Explanation 0
m + i + ss + i + ng = ng + i + ss + n The string are taken as fragments {m,ss,ng} and the set is reversed and placed
between the vowels.


==========>

string = input('Enter a string:')
vowels = []
words = []
start_index = 0
for index in range(len(string)):
    if string[index].lower() in 'aeiou':
        vowels.append(string[index])
        words.append(string[start_index:index])
        start_index = index+1
if string[start_index:] != "":
    words.append(string[start_index:])
words.reverse()
reversed_string = ""
for index in range(len(words)):
    if index < len(words):
        reversed_string += words[index]
    if index < len(vowels):
        reversed_string += vowels[index]

print(reversed_string)





--------------------------------------------------------------------------------------------------------------
Problem 4:
Array of integers is a hill, if:

it is strictly increasing in the beginning; after that it is constant; after that it is strictly decreasing.
The first block (increasing) and the last block (decreasing) may be absent. It is allowed that both of this blocks are absent.
For example, the following three arrays are a hill: [5,7,11,11,2,1], [4,4,2], [7],
but the following three are not unimodal: [5,5,6,6,1], [1,2,1,2], [4,5,5,6].

Write a program that checks if an array is a hill.

Input Format

The first line contains integer n (1<=n<=100) — the number of elements in the array.

The second line contains n integers a1,a2,...,an (1<=ai<=1000) — the elements of the array.

Output Format

Print "yes" if the given array is a hill. Otherwise, print "no".



==========>

n, arr = int(input('enter number of elements in array:')), input('enter array:').split()
arr = [int(ch) for ch in arr]


def is_unimodal(n, arr):
    i = 1
    for i in range(i, n):
        if not (arr[i - 1] < arr[i]):
            break
    else:
        return "YES"

    for i in range(i, n):
        if not (arr[i - 1] == arr[i]):
            break
    else:
        return "YES"

    for i in range(i, n):
        if not (arr[i - 1] > arr[i]):
            return "NO"
    else:
        return "YES"


print(is_unimodal(n, arr))



---------------------------------------------------------------------------------------------------------------


Problem 5:
A little girl living in a village craves some rava idli even though she has had rava idli for the last 346514534 days in a row !! (Strange, you might think. But its normal down here)

At the idli shop there are two types of Rava Idli's available.

One goes for Rs.A per piece and the other goes for Rs.B per piece.
The girl has a total of K rupees.

What is the maximum number of rava idlis that she can have?

Note that she does not care about the type of idli she gets, she just wants to have as many rava idlis of any type as possible.

Input

The first line contains the number of test cases T
1 = T = 1000
Each test case contains three integers, A, B and K.
1 = A,B,K = 10^9

Output

Print the maximum number of idlis she can buy for each test case on a new line

Sample Input 0

5
5 5 21
4 5 21
4 3 20
3 2 21
1 2 20
Sample Output 0

4
5
6
10
20


==========>

T = int(input('Enter the number of test cases T:\n'))
for i in range(T):
    a, b, k = list(map(int, input('enter values of a, b, k :\n').split()))
    if a >= b:
        print(k // b)
    else:
        print(k // a)

-----------------------------------------------------------------------------------------------------------------
Problem 6:
Python program to remove Nth occurrence of the given word. Given a list of words in Python, the task is to remove the Nth occurrence of the given word in that list.

Examples:

Input: list - ["Python", "for", "developers", "professionals", "developers"]
       word = developers, N = 2
Output: list - ["Python", "for", "developers", "professionals"]

Input: list - ["can", "you",  "can", "a", "can" "?"]
       word = can, N = 1
Output: list - ["you",  "can", "a", "can" "?"]

==========>

a=[]
n= int(input("Enter the number of elements in list:"))
for x in range(0,n):
    element=input("Enter element" + str(x+1) + ":")
    a.append(element)
print(a)
c=[]
count=0
b=input("Enter word to remove: ")
n=int(input("Enter the occurrence to remove: "))
for i in a:
    if(i==b):
        count=count+1
        if(count!=n):
            c.append(i)
    else:
        c.append(i)
if(count==0):
    print("Item not found ")
else:
    print("Updated list is: ",c)



-------------------------------------------------------------------------------------------------------------------

Problem 7:
Reverse words in a given String in Python
We are given a string and we need to reverse words of given string ?

Examples:

Input : str = "think career in IT think dlithe"
Output : str = "dlithe think IT in career think"

==========>

string = str(input('enter the string:'))
words = string.split()
words = list(reversed(words))
print(" ".join(words))


-------------------------------------------------------------------------------------------------------------------

Problem 8:
Check if a Substring is Present in a Given String
Given two strings, check if s1 is there in s2.

Examples:

Input : s1 = "test" s2="this is testing"
Output : yes

==========>

string = str(input('enter the string:'))
sub_str = input('enter the sub string:')


def check(string, sub_str):
    if (string.find(sub_str) == -1):
        print("NO")
    else:
        print("YES")

check(string, sub_str)

------------------------------------------------------------------------------------------------------------------
Problem 9:
Python program to print even length words in a string
Given a string. The task is to print all words with even length in the given string.

Examples:

Input: s = "This is a python language"
Output: This
        is
        python
        language 

Input: s = "i am Dlithe"
Output: am
        Dlithe

=======>

string = str(input('enter the string:'))
string = string.split(" ")
for word in string:
    if len(word)%2==0:
        print(word)

--------------------------------------------------------------------------------------------------------------------

Problem 10:
Program to check if a string contains any special character
Given a string, the task is to check if that string contains any special character (defined special character set). If any special character found, don’t accept that string.

Examples :

Input : Python$For$Developers
Output : String is not accepted.

Input : Python For Developers
Output : String is accepted

=======>

special_characters = "!@#$%^&*()-+?_=,<>/"
s=input('enter the string:')

if any(c in special_characters for c in s):
    print("string is not accepted")
else:
    print("string is accepted")


--------------------------------------------------------------------------------------------------------------------






